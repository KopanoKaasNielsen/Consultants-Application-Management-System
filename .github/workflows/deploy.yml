name: Deploy to Render

on:
  push:
    branches:
      - develop
      - staging
      - main

jobs:
  deploy-dev:
    name: Deploy development service
    if: github.ref == 'refs/heads/develop'
    runs-on: ubuntu-latest
    environment: development
    steps:
      - name: Trigger Render deploy (cams-dev)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_DEV }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$SERVICE_ID" ]; then
            echo "Render secrets are not configured for development." >&2
            exit 1
          fi
          curl --fail --show-error --silent \
            -X POST "https://api.render.com/v1/services/${SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{}'
          echo "Triggered Render deployment for cams-dev"

  deploy-staging:
    name: Deploy staging service
    if: github.ref == 'refs/heads/staging'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - name: Trigger Render deploy (cams-staging)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_STAGING }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$SERVICE_ID" ]; then
            echo "Render secrets are not configured for staging." >&2
            exit 1
          fi
          curl --fail --show-error --silent \
            -X POST "https://api.render.com/v1/services/${SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{}'
          echo "Triggered Render deployment for cams-staging"

  deploy-prod:
    name: Deploy production service
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Sync production ALLOWED_HOSTS
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_PROD }}
          FALLBACK_HOSTNAME: consultant-app-156x.onrender.com
        run: |
          set -euo pipefail

          if [ -z "$RENDER_API_KEY" ] || [ -z "$SERVICE_ID" ]; then
            echo "Render secrets are not configured for production." >&2
            exit 1
          fi

          service_response=$(curl --fail --show-error --silent \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            "https://api.render.com/v1/services/${SERVICE_ID}")

          detected_hostname=$(echo "${service_response}" | jq -r '
            def clean: sub("^https?://"; "") | split("/")[0];
            (
              [
                .serviceDetails.url,
                .serviceDetails.envSpecificDetails.url,
                .defaultDomain
              ]
              + ((.serviceDetails.customDomains // []) | map(.domain))
            )
            | map(select(type == "string" and length > 0))
            | map(clean)
            | .[0] // empty
          ')

          if [ -z "${detected_hostname}" ] || [ "${detected_hostname}" = "null" ]; then
            detected_hostname="${FALLBACK_HOSTNAME}"
          fi

          allowed_hosts_value="${detected_hostname},.onrender.com"

          payload=$(jq -n -c --arg allowed "${allowed_hosts_value}" --arg prod "${detected_hostname}" '{
            items: [
              {key: "ALLOWED_HOSTS", value: $allowed},
              {key: "PROD_ALLOWED_HOSTS", value: $prod}
            ]
          }')

          curl --fail --show-error --silent \
            -X PATCH "https://api.render.com/v1/services/${SERVICE_ID}/env-vars" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d "${payload}"

          echo "Updated Render ALLOWED_HOSTS to include ${detected_hostname}"

      - name: Trigger Render deploy (cams-prod)
        env:
          RENDER_API_KEY: ${{ secrets.RENDER_API_KEY }}
          SERVICE_ID: ${{ secrets.RENDER_SERVICE_ID_PROD }}
        run: |
          if [ -z "$RENDER_API_KEY" ] || [ -z "$SERVICE_ID" ]; then
            echo "Render secrets are not configured for production." >&2
            exit 1
          fi
          curl --fail --show-error --silent \
            -X POST "https://api.render.com/v1/services/${SERVICE_ID}/deploys" \
            -H "Authorization: Bearer ${RENDER_API_KEY}" \
            -H "Content-Type: application/json" \
            -d '{}'
          echo "Triggered Render deployment for cams-prod"
